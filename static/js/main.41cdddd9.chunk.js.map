{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/AboutComponent.js","shared/dishes.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","postComment","dishId","rating","author","comment","Button","outline","Modal","isOpen","toggle","fade","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","md","Col","size","offset","select","model","placeholder","validators","show","text","messages","textarea","rows","type","value","color","Component","RenderDish","dishdetails","tdish","Array","from","in","transformProps","exitTransform","CardBody","CardText","description","RenderComments","comments","userComments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","RenderCard","item","console","log","itemwise","eachitem","designation","CardSubtitle","Home","homeargs","dishesLoading","disheserrMess","promotion","promosLoading","promoserrMess","leader","leadersLoading","leaderserrMess","Header","isNavOpen","toggleNav","handleLogin","event","toggalModal","alert","username","remember","checked","preventDefault","Navbar","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","password","check","Footer","isNumber","isNaN","Number","validEmail","test","Contact","handleBlur","field","evt","touched","target","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","checkbox","About","CardHeader","title","Media","list","leaders","leaderslist","detail","left","top","object","body","heading","DISHES","category","label","price","featured","addComment","payload","dishesFailed","errmess","addDishes","commentsFailed","addComments","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","HomePage","filter","promotions","promo","exact","path","component","routerProps","match","dishid","parseInt","params","commentserrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","Firstname","Lastname","tel","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","Boolean","window","location","hostname","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41cdddd9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Loading = () =>{\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className = \"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}"," export const baseUrl = 'http://localhost:3001/'\r\n// export const baseUrl = 'https://leksproject.github.io/'\r\n// export const baseUrl='../public/assets/images/'","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem({dish, onClick})\r\n    {\r\n        return(\r\n        // <Card\r\n        //     // onClick={() => onClick(dish.id)}>               \r\n        //     // <CardColumns>\r\n        //     //  <CardImg width=\"50%\" src={dish.image}  alt=\"Card image cap\" className=\"img-fluid\"/>\r\n        //     //   <CardImgOverlay>\r\n        //     //  <CardTitle>{dish.name}</CardTitle>\r\n        //     // </CardImgOverlay>\r\n        //     // </CardColumns>       \r\n        // </Card>\r\n        <Card>\r\n        <Link to={`/menu/${dish.id}`} >\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardImgOverlay>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n            </CardImgOverlay>\r\n        </Link>\r\n        </Card>\r\n        );\r\n    }\r\n  \r\n      const Menu = (props) => \r\n      {\r\n         const menu = props.dishes.dishes.map((dish) => {\r\n            return(\r\n                <div className=\"col-12 col-lg-6 col-md-5 m-1\" key={dish.id}>\r\n                    <RenderMenuItem dish={dish} onClick = {props.onClick}/>\r\n                </div>           \r\n            );\r\n        });\r\n        if(props.dishes.isLoading){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(props.dishes.errMess){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        else {\r\n             return(\r\n            //     <div className=\"container\">\r\n            //     <div className=\"row\">\r\n            //         <div>\r\n            //      {menu}        \r\n            //         </div>\r\n            //     </div>\r\n            //  </div>\r\n                    <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );}\r\n\r\n      }\r\n   \r\n      \r\nexport default Menu;","import React, {Component } from 'react';    \r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,CardTitle,Breadcrumb,BreadcrumbItem,Button, Modal, ModalHeader, ModalBody,\r\n      Label,Row,Col } from 'reactstrap';\r\nimport {Control, LocalForm, Errors } from 'react-redux-form'\r\nimport {Loading} from './LoadingComponent';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\n//Form to handle comments\r\nclass CommentForm extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen : false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    };\r\n    toggleModal()\r\n    {\r\n        this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        });\r\n    }\r\n    \r\n    handleSubmit(values){\r\n        this.toggleModal();\r\n    \r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        \r\n        // console.log('Current State is: ' + JSON.stringify(values));\r\n        // alert('Current State is: ' + JSON.stringify(values));     \r\n       \r\n    }\r\n    render()\r\n    {\r\n        return(\r\n        <div>\r\n             <Button outline onClick={this.toggleModal} > Submit Comments\r\n             <span className=\"fa fa-sign-in fa-lg\"></span>\r\n             </Button> \r\n        <Modal  isOpen={this.state.isModalOpen} toggle={this.toggleModal} fade={false}>\r\n          \r\n        <ModalHeader toggle={this.toggleModal}>Submit Comments</ModalHeader>\r\n        <ModalBody>\r\n            {/* <div className=\"col-12 col-md-5 col-bg-6\"> */}\r\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                       <Row className=\"form-group\">\r\n                            <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                            <Col md={{size:10,offset:1}}>\r\n                                <Control.select model=\".rating\" name=\"Rating\"\r\n                                placeholder = \"1\"\r\n                                className = \"form-control\" \r\n                                validators ={{\r\n                                  required}}>\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                                <Errors \r\n                                className = \"text-danger\"\r\n                                model = \".rating\"\r\n                                show = \"touched\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"Your Name \" md={2}>Your Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".your name\" id=\"lastname\" name=\"lastname\"\r\n                                placeholder = \"Your Name\"\r\n                                className = \"form-control\"\r\n                                validators={{\r\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                }}\r\n                                 />\r\n                                <Errors\r\n                                  className=\"text-danger\"\r\n                                  model=\".your name\"\r\n                                  show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                     }}\r\n                                />                                \r\n                                </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"Comment \" md={2}>Comment</Label>\r\n                            <Col md={10}>\r\n                                <Control.textarea model=\".Comment\" id=\"Comment\" name=\"Comment\"\r\n                                placeholder = \"Comment\"\r\n                                rows = \"6\"\r\n                                className = \"form-control\"\r\n                                validators={{\r\n                                    required, minLength: minLength(10), maxLength: maxLength(50)\r\n                                }}\r\n                                 />\r\n                                <Errors\r\n                                  className=\"text-danger\"\r\n                                  model=\".comment\"\r\n                                  show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 10 characters',\r\n                                        maxLength: 'Must be 50 characters or less'\r\n                                     }}\r\n                                />                                \r\n                                </Col>\r\n                        </Row>\r\n                        \r\n                       <Row className=\"form-group\">\r\n                        <Col md={{size:10, offset:2}}>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </Col>\r\n                        </Row>\r\n                        </LocalForm>\r\n                 {/* </div>                                */}\r\n            </ModalBody>\r\n           \r\n        </Modal>\r\n      </div>\r\n       \r\n        );\r\n    }\r\n}\r\n\r\n//Display the details of selected dish            \r\n       function RenderDish({dishdetails})\r\n        {\r\n            if( dishdetails !== null)\r\n            {\r\n             let tdish = Array.from(dishdetails.dish);               \r\n             return tdish.map((dish) => {                   \r\n            return(\r\n              <div key={dish.id} className=\"col-md-5 m-1\">\r\n                    <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card >                                       \r\n                     <div>   \r\n                    <CardBody>\r\n                    <CardImgOverlay >\r\n                         <CardImg width=\"50%\" src={baseUrl + dish.image} alt={tdish.name} className = \"img-fluid\"/>\r\n                         <CardTitle>{dish.name}</CardTitle>\r\n                         <CardText>{dish.description}</CardText>\r\n                     </CardImgOverlay>\r\n                     </CardBody>\r\n             </div>\r\n                            \r\n               </Card>\r\n               </FadeTransform>\r\n               </div>\r\n                 );\r\n                    })\r\n            }\r\n            else{\r\n                return(\r\n                    <div></div>\r\n                     );\r\n            }\r\n        }\r\n\r\n        function RenderComments({comments,postComment,dishId}) {\r\n            if (comments != null) {\r\n             \r\n                const userComments =\r\n                <Stagger in>\r\n                   {comments.map((comment) => {\r\n                    return (\r\n                        <Fade in>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                            <li className=\"text-justify\">{comment.comment}</li>\r\n                            <li className=\"text-justify\">-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</li>\r\n                        </ul>\r\n                        </Fade>\r\n                    );\r\n                })}\r\n                </Stagger>\r\n\r\n    \r\n                return (\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <h4 className=\"text-justify\">Comments</h4>\r\n                        {userComments}\r\n                        <CommentForm dishId={dishId} postComment={postComment}/>\r\n                    </div>  \r\n                );\r\n            } else {\r\n                return(\r\n                    <div></div>\r\n                );\r\n            }\r\n        }\r\n                         \r\n        const DishDetail = (props) => {  \r\n            if(props.dishdetails.isLoading){\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Loading/>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            else if(props.dishdetails.errMess){\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <h4>{props.dishdetails.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                )\r\n            }\r\n\r\n            else if(props.dishdetails != null){\r\n                            return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dishdetails.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                         <h3>{props.dishdetails.name}</h3>\r\n                         <br />\r\n                        </div>                \r\n                </div>\r\n            \r\n               <div className=\"row\">\r\n                  <div  className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dishdetails={props.dishdetails}/>\r\n                 <div  className=\"col-12 col-md-5 m-1\">     \r\n                    <Card>\r\n                       <RenderComments comments={props.dishdetails.comments}\r\n                        postComment={props.postComment}\r\n                        dishId = {props.dishdetails.id}/>\r\n                    </Card>\r\n                       </div>\r\n                       \r\n                       {/* <CommentForm dishId={props.dishdetails.id} addComment={props.addComment} />  */}\r\n                   </div>           \r\n                </div>\r\n            </div>\r\n            );   \r\n    }  \r\n    }\r\n\r\nexport default DishDetail;\r\n\r\n ","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction RenderCard({item, isLoading, errMess})\r\n{\r\n\r\n    console.log(\"item\",item);\r\n    const itemwise = item.map((eachitem) => {\r\n        \r\n         return(\r\n            <div className = \"container\">\r\n                <div key={eachitem.id} className = \"col-12 col-md-5 col-lg-3\">\r\n                <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n            \r\n                <CardBody>\r\n                {/* <CardImg src={baseUrl + eachitem.image} alt={eachitem.name} /> */}\r\n                <CardImg src={baseUrl+ eachitem.image} alt={eachitem.name} />\r\n                <CardTitle>{eachitem.name}</CardTitle>\r\n                {eachitem.designation ? <CardSubtitle>{eachitem.designation}</CardSubtitle> : null }\r\n                <CardText>{eachitem.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n            </div>\r\n            </div>\r\n        );\r\n\r\n    });\r\n\r\n    if(isLoading){\r\n        return(\r\n             <Loading/>\r\n             );\r\n        }\r\n    else if(errMess){\r\n        return(\r\n            <h4>{errMess}</h4>\r\n             );\r\n        }\r\n    else if(item != null){\r\n      return( \r\n          <div>\r\n        {itemwise}\r\n        </div>\r\n        );\r\n}\r\n}\r\n\r\nfunction Home(props)\r\n{\r\n  \r\n    if(props != null)\r\n        {\r\n    return(\r\n        \r\n        <div className=\"container\">\r\n            <div className=\" row align-items-start\">\r\n                 <div className=\"col-12 col-md-5 col-bg-6 m-1\">\r\n                    <RenderCard item={props.homeargs.dish}\r\n                    isLoading={props.homeargs.dishesLoading} \r\n                    errMess = {props.homeargs.disheserrMess} /> \r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderCard item={props.homeargs.promotion}\r\n                    isLoading={props.homeargs.promosLoading} \r\n                    errMess = {props.homeargs.promoserrMess}\r\n                     />\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderCard item={props.homeargs.leader}\r\n                     isLoading={props.homeargs.leadersLoading} \r\n                     errMess = {props.homeargs.leaderserrMess} />\r\n                </div>  \r\n            </div>\r\n    \r\n            <h4>Home</h4>\r\n        </div>\r\n    \r\n    );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,Form, FormGroup, Input, Label, Button, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            isNavOpen : false,\r\n            isModalOpen : false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    }\r\n\r\n    toggleNav()\r\n    {\r\n        this.setState({\r\n            isNavOpen : !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal()\r\n    {\r\n        this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggalModal();\r\n        alert(\"Username\" + this.username.value + \"Password :\" + \"Remember \"+ this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n        <Navbar className=\"navbar-dark\" expand=\"md\">\r\n            <div className=\"container\">\r\n                <NavbarToggler onClick={this.toggleNav} />\r\n                <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                    <Nav navbar>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                    </NavItem>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Button outline onClick={this.toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\"></span>\r\n                                Login\r\n                            </Button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n            <div className=\"container\">\r\n                <div className=\"row row-header\">\r\n                    <div className=\"col-12 col-sm-6\">\r\n                        <h1>Ristorante con Fusion</h1>\r\n                        <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Jumbotron>\r\n        <Modal  isOpen={this.state.isModalOpen} toggle={this.toggleModal} fade={false}>\r\n            <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n            <ModalBody>\r\n                <Form onSubmit={this.handleLogin}>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"Username\">Username</Label>\r\n                        <Input type=\"text\" id=\"username\" name=\"username\" \r\n                           innerRef={(input) => this.username = input} />                        \r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"password\">Password</Label>\r\n                        <Input type=\"password\" id=\"password\" name=\"password\"\r\n                           innerRef={(input) => this.password = input}  />                        \r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                        <Label check>\r\n                            <Input type=\"checkbox\" name=\"remember\"\r\n                            innerRef={(input) => this.remember = input} />\r\n                            Remember me\r\n                        </Label>\r\n                      \r\n                    </FormGroup>\r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                </Form>\r\n            </ModalBody>\r\n        </Modal>\r\n    </div>\r\n   );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n\r\n                    <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n   \r\n    );\r\n   \r\n}\r\n\r\nexport default Footer;","import React,{Component} from 'react';\r\nimport { Button, FormGroup, Label, Col,Row } from 'reactstrap';\r\nimport {Control, LocalForm, Errors } from 'react-redux-form'\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        //state being managed by react-redux form\r\n        // this.state = {\r\n        //     firstname : '',\r\n        //     lastname : '',\r\n        //     telnum : '',\r\n        //     email : '',\r\n        //     agree:false,\r\n        //     contactType : 'Tel',\r\n        //     message : '',\r\n        //     touched : {\r\n        //         firstname : false,\r\n        //         lastname : false,\r\n        //         telnum : false,\r\n        //         email : false\r\n        //     }\r\n        // };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        // this.handleBlur = this.handleBlur.bind(this);   \r\n    }\r\n\r\n\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(values){\r\n\r\n        \r\n        // console.log('Current State is: ' + JSON.stringify(values));\r\n        // this.props.postFeedback(values).then(\r\n        // alert('Current State is: ' + JSON.stringify(values))\r\n        // );\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email,values.agree,values.contactType,values.message);\r\n  \r\n        // values.preventDefault();\r\n\r\n    }\r\n    //whenever anything changes in the input box\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n                touched: {...this.state.touched, [field] : true }\r\n            });\r\n     }\r\n\r\n//validate done by react-redux form\r\n    //  validate(firstname, lastname, telnum,email)\r\n    //  {\r\n    //      const errors = {\r\n    //         firstname : '',\r\n    //         lastname: '',\r\n    //         telnum : '',\r\n    //         email : ''\r\n    //      };\r\n\r\n    //      if(this.state.touched.firstname && firstname.length < 3)\r\n    //         errors.firstname = 'Firstname should be > 3 characters';\r\n    //     else if(this.state.touched.firstname && firstname.length > 10)\r\n    //         errors.firstname = 'Firstname should be < 10 characters';\r\n    //     if(this.state.touched.lastname && lastname.length < 3)\r\n    //         errors.lastname = 'Lastname should be > 3 characters';\r\n    //     else if(this.state.touched.lastname && lastname.length > 10)\r\n    //         errors.lastname = 'Lastname should be < 10 characters';\r\n    //     if(this.state.touched.telnum && firstname.telnum < 9)\r\n    //         errors.telnum = 'Tel num should be > 3 characters';\r\n       \r\n    //     const reg = /^\\d+$/;\r\n    //     if(this.state.touched.telnum && !reg.test(telnum))\r\n    //         errors.telnum = 'Tel num should have only numbers';\r\n    //     if(this.state.touched.email && email.split('').filter(x => x === \"@\").length !== 1)\r\n    //         errors.email = 'Email should have an @ sign';\r\n        \r\n    //     return errors;\r\n    //  }\r\n    render(){\r\n        //Validate the fields\r\n       // const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send us your feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                    \r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                placeholder = \"First Name\"\r\n                                className = \"form-control\" \r\n                                validators ={{\r\n                                  required, minLength : minLength(3), maxLength : maxLength(10)}}/>\r\n                                <Errors \r\n                                className = \"text-danger\"\r\n                                model = \".firstname\"\r\n                                show = \"touched\"\r\n                                messages = {{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }}/>\r\n                                {/* This is one way of validation */}\r\n                                 {/* value = {this.state.firstname}\r\n                                 valid = {errors.firstname === ''}\r\n                                 invalid = {errors.firstname !== ''}\r\n                                 onBlur = {this.handleBlur('firstname')}\r\n                                 onChange = {this.handleInputChange}/> */}\r\n                                {/* <FormFeedback>\r\n                                    {errors.firstname}\r\n                                </FormFeedback> */}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                placeholder = \"First Name\"\r\n                                className = \"form-control\"\r\n                                validators={{\r\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                }}\r\n                                 />\r\n                                <Errors\r\n                                  className=\"text-danger\"\r\n                                  model=\".lastname\"\r\n                                  show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                     }}\r\n                                />\r\n                                \r\n                                {/* // value = {this.state.lastname}\r\n                                // valid = {errors.lastname === ''}\r\n                                // invalid = {errors.lastname !== ''}\r\n                                // onBlur = {this.handleBlur('lastname')}\r\n                                // onChange = {this.handleInputChange}/> */}\r\n                                {/* <FormFeedback>\r\n                                    {errors.lastname}\r\n                                </FormFeedback> */}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                placeholder = \"Tel.Num\"\r\n                                className = \"form-control\"\r\n                                validators={{\r\n                                    required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                }}\r\n                                 />\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".telnum\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 numbers',\r\n                                    maxLength: 'Must be 15 numbers or less',\r\n                                    isNumber: 'Must be a number'\r\n                                }}/>\r\n\r\n                                {/* Handled by react-redux form */}\r\n                                {/* // value = {this.state.telnum}\r\n                                // valid = {errors.telnum === ''}\r\n                                // invalid = {errors.telnum !== ''}\r\n                                // onBlur = {this.handleBlur('telnum')}\r\n                                // onChange = {this.handleInputChange}/> */}\r\n\r\n                                {/* <FormFeedback>\r\n                                    {errors.telnum}\r\n                                </FormFeedback> */}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"Email\" md={2}>Email </Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                placeholder = \"Email\"\r\n                                className = \"form-control\" \r\n                                validators={{\r\n                                    required, validEmail\r\n                                }}\r\n                                 />\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".email\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    validEmail: 'Invalid Email Address'\r\n                                }}\r\n                                />\r\n\r\n                                {/* value = {this.state.email}\r\n                                valid = {errors.email === ''}\r\n                                invalid = {errors.email !== ''}\r\n                                onBlur = {this.handleBlur('email')}\r\n                                onChange = {this.handleInputChange}/> */}\r\n                                {/* <FormFeedback>\r\n                                    {errors.email}\r\n                                </FormFeedback> */}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                    <Col md={{size:6,offset:2}}>\r\n                                    <div className = \"form-check\">\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \r\n                                                className=\"form-check-input\"\r\n                                                />{' '}\r\n                                                <strong>May we contact you</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                    </div>\r\n                            </Col>\r\n                            <Col md={{size:3,offset:1}}>\r\n                                <Control.select model=\".contactType\" name=\"contactType\" >\r\n                                {/* // value={this.state.contactType}\r\n                                // onChange = {this.handleInputChange}> */}\r\n                                    <option>Tel.</option>\r\n                                    <option>Email</option>\r\n                                </Control.select>\r\n                              \r\n                            </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your </Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className = \"form-control\"/>\r\n                                        {/* // value={this.state.message}\r\n                                        // onChange={this.handleInputChange}> */}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button color=\"primary\"  type=\"submit\" >\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                    </LocalForm>\r\n                </div>\r\n            </div>\r\n            </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    function Renderleaders(leaders)\r\n    {\r\n                         \r\n        // if(props != null){\r\n        const leaderslist = \r\n        // <Stagger in>\r\n        leaders.leaders.map((detail) =>\r\n        {\r\n            return(\r\n                <div className = \"container\">\r\n                <div key={detail.id} className = \"row\">\r\n                      <Media>\r\n                      <Media left top className = \"col-12 col-md-5 col-lg-3\">\r\n                        <Media object width=\"20%\" src={baseUrl + detail.image} alt={detail.name} />\r\n                      </Media>\r\n                     <Media body >\r\n                     <Media heading>\r\n                          {detail.name}\r\n                         <br/>\r\n                     </Media>\r\n                     <Media>\r\n                     {detail.designation}\r\n                     </Media>\r\n                    {detail.description}\r\n                    </Media>\r\n                     <br/>\r\n                     </Media>\r\n                                          \r\n              </div> \r\n            </div>);\r\n           \r\n         });\r\n                  \r\n            if (props != null){\r\n                return(\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        {/* Animation effect */}\r\n                        <Stagger in>\r\n                            <Fade>\r\n                               {leaderslist}\r\n                            </Fade>\r\n                       </Stagger>\r\n \r\n                    </div>\r\n                );\r\n                }\r\n}\r\n    return(\r\n       <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                    <div>\r\n                      <h3>About Us</h3>\r\n                         <hr />\r\n                     </div>                \r\n            </div>\r\n            <div className=\"row \">\r\n                <div className=\"col-12 col-md-5 col-lg-3 m-2\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5 col-lg-3 m-2\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-md-6 col-xs-6\">Started</dt>\r\n                                <dd className=\"col-md-6\">3 Feb. 2013</dd>\r\n                                <br/>\r\n                                <dt className=\"col-md-7\">Major Stake Holder</dt>\r\n                                <dd className=\"col-md-5\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-md-7\">Last Year's Turnover</dt>\r\n                                 <dd className=\"col-md-5\">$1,250,375</dd>\r\n                                <br/>\r\n                                <dt className=\"col-md-6\">Employees</dt>\r\n                                <dd className=\"col-md-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            \r\n            <div className=\"row \">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n               \r\n                <div className=\"col-12 col-md-5 col-lg-3\">\r\n                    <Media list>\r\n                    <Renderleaders leaders = {props.leaders}/>\r\n                    </Media>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default About;    ","export const DISHES =\r\n    [\r\n        {\r\n        id: 0,\r\n        name:'Uthappizza',\r\n        image: 'images/uthappizza.png',\r\n        category: 'mains',\r\n        label:'Hot',\r\n        price:'4.99',\r\n        featured: true,\r\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.'                    \r\n        },\r\n        {\r\n        id: 1,\r\n        name:'Zucchipakoda',\r\n        image: 'images/zucchipakoda.png',\r\n        category: 'appetizer',\r\n        label:'',\r\n        price:'1.99',\r\n        featured: false,\r\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce'\r\n        },\r\n        {\r\n        id: 2,\r\n        name:'Vadonut',\r\n        image: 'images/vadonut.png',\r\n        category: 'appetizer',\r\n        label:'New',\r\n        price:'1.99',\r\n        featured: false,\r\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?'\r\n        },\r\n        {\r\n        id: 3,\r\n        name:'ElaiCheese Cake',\r\n        image: 'images/elaicheesecake.png',\r\n        category: 'dessert',\r\n        label:'',\r\n        price:'2.99',\r\n        featured: false,\r\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms'\r\n        }\r\n    ];","import * as ActionTypes from './ActionTypes'\r\nimport {DISHES} from '../shared/dishes'\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n        type:ActionTypes.ADD_COMMENT,\r\n        payload : comment\r\n});\r\n\r\n//Thunk - returns dispatch with different actions\r\nexport const fetchDishes = () => (dispatch) => {\r\n    console.log(\"baseUrl\",baseUrl);\r\n   dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n      if (response.ok) {\r\n           return response;\r\n        } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n        }\r\n    },\r\n    error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n    })\r\n            .then(response => response.json())\r\n            .then(dishes => dispatch(addDishes(DISHES)))\r\n            .catch(error => dispatch(dishesFailed(error.message)));\r\n\r\n}\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    console.log(\"Response\",response);\r\n                return response;\r\n                } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                // error.response = response;\r\n                throw error;\r\n                }\r\n            },\r\n            error => {\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n            })\r\n            .then(response => response.json())\r\n            .then(comments => dispatch(addComments(comments)))\r\n            .catch(error => dispatch(commentsFailed(error.message)));\r\n    \r\n}\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId : dishId,\r\n        rating : rating,\r\n        author : author, \r\n        comment : comment\r\n    };\r\n\r\n    newComment.date = new Date().toISOString();\r\n    // console.log(\"New comment\", newComment);\r\n    return fetch(baseUrl + 'comments',{\r\n        method : \"POST\",\r\n        body : JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials: \"same-origin\"\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n      .then(response => response.json())\r\n      .then(response => dispatch(addComment(response)))\r\n      .catch(error =>  { console.log('post comments', error.message);\r\n       alert('Your comment could not be posted\\nError: '+error.message); });\r\n  };\r\n\r\n  export const postFeedback = (Firstname, Lastname, tel, email,agree,contactType, message) => (dispatch) => {\r\n    \r\n    const newFeedback = {\r\n        Firstname : Firstname,\r\n        Lastname : Lastname,\r\n        tel : tel,\r\n        email : email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message,\r\n    };\r\n\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n//    console.log(\"newfeedback\",newFeedback);\r\n    return fetch(baseUrl + 'feedback',\r\n    {\r\n   \r\n        method : \"POST\",\r\n        body : JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials: \"same-origin\"\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n            // console.log(\"Response in postfeedback\",JSON.stringify(response));\r\n            return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n      .then(response => response.json())\r\n      .then(response => dispatch(\r\n                postFeedback(response)\r\n                ))\r\n      .catch(error =>  { console.log('post feedback', error.message);\r\n       alert('Your comment could not be posted\\nError: '+error.message); });\r\n  };\r\n\r\n    \r\n//Different action types\r\nexport const dishesLoading = () => ({\r\n    type:ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type : ActionTypes.DISHES_FAILED,\r\n    payload : errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type : ActionTypes.ADD_DISHES,\r\n    payload : dishes\r\n});\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type : ActionTypes.COMMENTS_FAILED,\r\n    payload : errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type : ActionTypes.ADD_COMMENTS,\r\n    payload : comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n   dispatch(promosLoading());\r\n    return fetch(baseUrl + 'promotions')\r\n            .then(response => response.json())\r\n            .then(promos => dispatch(addPromos(promos)));\r\n\r\n}\r\n\r\n//Different action types\r\nexport const promosLoading = () => ({\r\n    type:ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type : ActionTypes.PROMOS_FAILED,\r\n    payload : errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type : ActionTypes.ADD_PROMOS,\r\n    payload : promos\r\n})\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n    if (response.ok) {\r\n        console.log(\"Response in fetchDishes\",response);\r\n    return response;\r\n    } else {\r\n    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n    error.response = response;\r\n    throw error;\r\n    }\r\n},\r\nerror => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n})\r\n     \r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED'\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED'\r\n","import React,{Component} from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent.js';\r\nimport Home from './HomeComponent';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { BrowserRouter as Router,withRouter} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport {postComment,postFeedback, addComment,fetchDishes,fetchComments, fetchPromos,fetchLeaders} from '../redux/ActionCreators';\r\nimport { TransitionGroup } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addComment: (dishId, rating,author,comment) => dispatch(addComment(dishId, rating,author,comment)),\r\n  postComment: (dishId, rating,author,comment) => dispatch(postComment(dishId, rating,author,comment)),\r\n  postFeedback: (firstname,\r\n    lastname,\r\n    telnum,\r\n    email,\r\n    agree,\r\n    contactType,\r\n    message,\r\n    id) => dispatch(postFeedback( firstname,\r\n      lastname,\r\n      telnum,\r\n      email,\r\n      agree,\r\n      contactType,\r\n      message,\r\n      id)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders : () => {dispatch(fetchLeaders())}\r\n});\r\nclass Main extends Component {\r\n\r\n  \r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    \r\n    //Removed and included in reducer.js\r\n    // this.state = {\r\n    //   dishes : DISHES,\r\n    //   comments: COMMENTS,\r\n    //   promotions: PROMOTIONS,\r\n    //   leaders: LEADERS\r\n    // };\r\n  }\r\n\r\n  //Executed after the main component is mounted\r\n\r\n  //As main component is mounted, these will be updated from server.\r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  onDishSelect(dishId){\r\n     this.setState({selectedDish : dishId});\r\n  }\r\n\r\n render()\r\n  {\r\n\r\n    console.log(\"Main\", this.props);\r\n        const HomePage = () => { \r\n      \r\n    const homeargs = {\r\n        dish : this.props.dishes.dishes.filter((dish) => dish.featured),\r\n        dishesLoading : this.props.dishes.isLoading,\r\n        disheserrMess : this.props.dishes.errMess,\r\n        promotion : this.props.promotions.promotions.filter(promo => promo.featured),\r\n        promosLoading : this.props.promotions.isLoading,\r\n        promoserrMess : this.props.promotions.errMess,\r\n        leader: this.props.leaders.leaders.filter(leader => leader.featured),\r\n        leadersLoading : this.props.leaders.isLoading,\r\n        leaderserrMess : this.props.leaders.errMess,\r\n      }\r\n  return( \r\n      <div>\r\n        {\r\n         <Home homeargs={homeargs}/>}\r\n         </div>);          \r\n      }\r\n\r\n      const DishWithId = ({match}) => {\r\n        \r\n        let dishid = {\r\n          dish : this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId)),\r\n          isLoading : this.props.dishes.isLoading,\r\n          errMess : this.props.dishes.errMess,\r\n          comments : this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId)),\r\n          commentserrMess : this.props.comments.errMess,\r\n          addComment : this.props.addComment,\r\n          postComment : this.props.postComment,\r\n              \r\n        }\r\n\r\n        return(\r\n          <div>\r\n            <DishDetail dishdetails = {dishid}/>\r\n          </div>          \r\n           \r\n        );\r\n      }\r\n        \r\n     return(\r\n\r\n        \r\n        <div>      \r\n        <Header/>\r\n        <TransitionGroup>\r\n        <Switch>\r\n        <Route exact path={`/home`} component ={ (routerProps) => < Home routerProps={routerProps} {...HomePage} />} />\r\n          {/* <Route path=\"/home\" component={HomePage}/> */}\r\n          <Route path='/menu/:dishId' component={DishWithId} />\r\n          <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes}  />}/>\r\n          <Route exact path=\"/contactus\" component={()=> <Contact postFeedback = {this.props.postFeedback}/>}/>\r\n          <Route exact path=\"/aboutus\" component={() => <About leaders = {this.props.leaders.leaders}/>}/>\r\n          <Redirect to=\"/home\" />\r\n        \r\n        </Switch>\r\n        <Footer/>\r\n        {/* </CSSTransition> */}\r\n      </TransitionGroup>\r\n      </div>\r\n\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\r\n\r\n\r\n\r\n","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Dishes = (state = {\r\n        isLoading : true,\r\n        errMess : null,\r\n        dishes : []\r\n}, action) => {\r\n    switch(action.type){\r\n       \r\n            case ActionTypes.ADD_DISHES:\r\n                return{...state, isLoading : false, errMess : null, dishes : action.payload};\r\n\r\n            case ActionTypes.DISHES_LOADING:\r\n                return{...state, isLoading : true, errMess : null, dishes : []};\r\n\r\n            case ActionTypes.DISHES_FAILED:\r\n                return{...state, isLoading : false, errMess : action.payload, dishes : []}\r\n\r\n          default : \r\n            return state;\r\n    }\r\n}\r\n","// import { COMMENTS } from '../shared/comments';\r\nimport * as ActionTypes from './ActionTypes'\r\n\r\n\r\nexport const Comments = (state = {\r\n        errMess : null,\r\n        comments : []\r\n},action ) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENTS:\r\n                return{...state, isLoading : false, errMess : null, comments : action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n                    return{...state, isLoading : false, errMess : action.payload, comments : []}\r\n    \r\n\r\n        case ActionTypes.ADD_COMMENT :\r\n            var comment = action.payload;\r\n            // comment.id = state.comments.length;\r\n            // comment.date = new Date().toISOString();\r\n            return {...state,comments: state.comments.concat(comment)};\r\n        default : \r\n            return state;\r\n    }\r\n}","// import { PROMOTIONS } from '../shared/promotions';\r\nimport * as ActionTypes from './ActionTypes'\r\n\r\nexport const Promotions = ( \r\n    state = {\r\n        isLoading : true,\r\n        errMess : null,\r\n        promotions : []\r\n}, action) => {\r\n    switch(action.type){\r\n\r\n        case ActionTypes.ADD_PROMOS:\r\n            return{...state, isLoading : false, errMess : null, promotions : action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return{...state, isLoading : true, errMess : null, promotions : []};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return{...state, isLoading : false, errMess : action.payload, promotions : []}\r\n\r\n        default : \r\n            return state;\r\n    }\r\n}","// import { LEADERS } from '../shared/leaders';\r\nimport * as ActionTypes from './ActionTypes'\r\n\r\nexport const Leaders = ( \r\n    state = {\r\n        isLoading : true,\r\n        errMess : null,\r\n        leaders : []\r\n}, action) => {\r\n    switch(action.type){\r\n\r\n        case ActionTypes.ADD_LEADERS:\r\n            return{...state, isLoading : false, errMess : null, leaders : action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return{...state, isLoading : true, errMess : null, leaders : []};\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return{...state, isLoading : false, errMess : action.payload}\r\n\r\n        default : \r\n            return state;\r\n    }\r\n}","import React,{Component} from 'react';\nimport './App.css';\nimport Main from './components/MainComponent.js';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\nclass App extends Component{\n\nrender(){\n  return(\n    <Provider store={store}>\n    <Router>\n    <div className=\"App\">\n     <Main/>\n    </div>\n    </Router>\n    </Provider>);\n}\n}\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {Dishes} from './dishes';\r\nimport {Comments} from './comments';\r\nimport {Promotions} from './promotions';\r\nimport {Leaders} from './leaders';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n//Combine the reducers\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes : Dishes,\r\n            comments: Comments,\r\n            promotions : Promotions,\r\n            leaders : Leaders\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      console.log(\"swUrl\",swUrl);\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App/></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}